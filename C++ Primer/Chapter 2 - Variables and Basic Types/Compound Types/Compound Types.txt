- Compound type is a type that is defined in terms of another type
    - C++ has several compound types, two of which - references and pointers
- A reference defines an alternative name for an object
    - A reference type 'refers to' another type
        - We define a reference type by writing a declarator of the for '&d', where
          d is the name being declared
            - int ival = 1024;
            - int &refVal = ival; // refVal refers to (is another name for) ival
            - int &refVal2; // error: a reference must be initialized
        - ordinarily, when we initialize a variable
            - The value of the initializer is copied into the object we are creating
            - When we define a reference, instead of copying the initializer's value
                - We bind the reference to its initializer
                    - There is no way to rebind a reference, thus references must be
                      initialized
    - A reference is not an object, instead, a reference is just another name for an
      already existing object
        - We are not allowed to define a reference to a reference
- A pointer is a compound type that 'points' to another type
    - Like references, pointers are used for indirect access to other objects
    - Unlike a reference, a pointer is an object in its own right
        - Pointers can be assigned and copied; a single pointer can point to several different
          objects over its lifetime
        - Unlike a reference, a pointer need not be initialized at the time it is defined
    - Like other built-in types, pointers defined at block scope have undefined value if they
      are not initialized
        - int *ip1, *ip2; // both ip1 and ip2 are pointers to int
        - double dp, *dp2; // dp2 is a pointer to double; dp is a double
    - A point holds the address of another object
        - We get the address of an object by using the address of operator
            - int ival = 42;
            - int *p = &ival; // p holds the address of ival; p is a pointer to ival