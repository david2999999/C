Input/Output
    - C++ includes an extensive standard library that provides IO.
        - Fundamental to the iostream library has two types
            - istream and ostream
            - Which represents input and output streams
    - A stream is a sequence of characters read from or written to an IO device
        - The term stream is intended to suggest that the characters are generated,
          or consumed, sequentially over time
    - To handle input, we use an object of type istream named 'cin'
        - This object is also referred to as the standard input
    - To handle output, we use an ostream object named 'cout'
        - This object is also referred to as the standard output
        - There are also two other ostream objects
            - cerr and clog
                - 'cerr' is for standard error
                - 'clog' is for general information about the execution of the program

Code
    - The first line of the program '#include <iostream>' tells the compiler that we want to
      use the iostream library
        - The name inside angle brackets refers to a header
        - Every program that uses a library facility must include its associated header
    - The #include directive must be written on a single line
        - The name of the header and the #include must appear on the same line
    - In general, #include directives must appear outside any function
        - Typically, we put the #include directives for a program at the beginning of the
          source file

<< Operator
    - The << operator takes two operands
        - The left-hand operand must be an ostream object
        - The right-hand operand is a value to print
    - The operator writes the given value on the given ostream
        - The result of the output operator is its left-hand operand
            - That is, the result is the ostream on which we wrote the given value
            - Then our output statement uses the << operator twice
                - Because the operator returns its left-hand operand
                - 'endl' is a special value called a manipulator
                    - It has an effect of ending the current line and flushing the buffer
                      associated with that device
                    - Flushing the buffer ensures that all the output associated with
                      the program has generated so far is actually written to the output stream,
                      rather than sitting in memory waiting to be written

>> Operator
    - The >> Operator behaves analogously to the output operator
        - It takes an istream as its left-hand operand and an object as its right-hand operand
        - It reads data from the given istream and stores what what read in the given object
    - Like the output operator, the input operator returns its left-hand operand as its result
        - (std::cin >> v1) >> v2;
        - Because it return its left-hand operand, we can combine a sequence of input requests into
          a single statement